{"ast":null,"code":"var _jsxFileName = \"/Users/joga/Documents/Pooja/reddit-replica/src/components/Post.js\";\nimport React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport Remarkable from 'remarkable';\nimport '../styles/Post.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\nvar getMarkup = function getMarkup(text) {\n  if (text) {\n    var md = new Remarkable();\n    return {\n      __html: md.render(text)\n    };\n  } else {\n    return {\n      __html: \"\"\n    };\n  }\n};\n\nvar postInPanel = function postInPanel() {\n  window.location.reload();\n};\n\nvar notImage = ['self', 'default'];\n\nvar Post = function Post(_ref) {\n  var url = _ref.url,\n      title = _ref.title,\n      author = _ref.author,\n      selftext = _ref.selftext,\n      thumbnail = _ref.thumbnail,\n      subreddit_name_prefixed = _ref.subreddit_name_prefixed;\n  return React.createElement(\"a\", {\n    href: \"#\",\n    className: \"main-card\",\n    onClick: postInPanel(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"card-border\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, !notImage.includes(thumbnail) && React.createElement(Image, {\n    floated: \"right\",\n    src: thumbnail,\n    rounded: true,\n    bordered: true,\n    size: \"tiny\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Posted by \", author, \" \"), React.createElement(\"div\", {\n    className: \"post-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \" \", selftext, \" \"), React.createElement(\"div\", {\n    className: \"external-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fa fa-external-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), \" \", url)));\n};\n\nexport default Post;","map":{"version":3,"sources":["/Users/joga/Documents/Pooja/reddit-replica/src/components/Post.js"],"names":["React","Card","Image","Remarkable","getMarkup","text","md","__html","render","postInPanel","window","location","reload","notImage","Post","url","title","author","selftext","thumbnail","subreddit_name_prefixed","includes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,oBAAP;AACA,OAAO,uCAAP;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAU;AACxB,MAAIA,IAAJ,EAAU;AACN,QAAMC,EAAE,GAAG,IAAIH,UAAJ,EAAX;AACA,WAAO;AAAEI,MAAAA,MAAM,EAAED,EAAE,CAACE,MAAH,CAAUH,IAAV;AAAV,KAAP;AACH,GAHD,MAGO;AACH,WAAO;AAAEE,MAAAA,MAAM;AAAR,KAAP;AACH;AACJ,CAPD;;AASA,IAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,CAFD;;AAIA,IAAMC,QAAQ,GAAG,CAAE,MAAF,EAAU,SAAV,CAAjB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO;AAAA,MAAGC,GAAH,QAAGA,GAAH;AAAA,MAAQC,KAAR,QAAQA,KAAR;AAAA,MAAeC,MAAf,QAAeA,MAAf;AAAA,MAAuBC,QAAvB,QAAuBA,QAAvB;AAAA,MAAiCC,SAAjC,QAAiCA,SAAjC;AAAA,MAA4CC,uBAA5C,QAA4CA,uBAA5C;AAAA,SACT;AAAG,IAAA,IAAI,EAAC,GAAR;AAAY,IAAA,SAAS,EAAC,WAAtB;AAAkC,IAAA,OAAO,EAAEX,WAAW,EAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,CAACI,QAAQ,CAACQ,QAAT,CAAkBF,SAAlB,CAAD,IAAiC,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAC,OAAf;AAAuB,IAAA,GAAG,EAAEA,SAA5B;AAAuC,IAAA,OAAO,MAA9C;AAA+C,IAAA,QAAQ,MAAvD;AAAwD,IAAA,IAAI,EAAC,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADvC,EAEI;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAmCF,MAAnC,MAFJ,EAGI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BD,KAA5B,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAOE,QAAP,MAJJ,EAKI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+B;AAAG,IAAA,SAAS,EAAC,qBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/B,OAAwEH,GAAxE,CALJ,CADJ,CADS;AAAA,CAAb;;AAYA,eAAeD,IAAf","sourcesContent":["import React from 'react'\nimport { Card, Image } from 'semantic-ui-react'\nimport Remarkable from 'remarkable'\nimport '../styles/Post.css';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\nconst getMarkup = (text) => {\n    if (text) {\n        const md = new Remarkable()\n        return { __html: md.render(text)}\n    } else {\n        return { __html: ``}\n    }\n}\n\nconst postInPanel = () => {\n  window.location.reload();\n}\n\nconst notImage = [ 'self', 'default' ]\n\nconst Post = ({ url, title, author, selftext, thumbnail, subreddit_name_prefixed }) => (\n    <a href=\"#\" className=\"main-card\" onClick={postInPanel()}>\n        <div className=\"card-border\" >\n            { !notImage.includes(thumbnail) && <Image floated='right' src={thumbnail} rounded bordered size=\"tiny\" />}\n            <div className=\"author\">Posted by {author} </div>\n            <div className=\"post-text\">{title}</div>\n            <div> {selftext} </div>\n            <div className=\"external-link\"><i className=\"fa fa-external-link\"></i> {url}</div>\n        </div>\n    </a>\n)\n\nexport default Post\n"]},"metadata":{},"sourceType":"module"}