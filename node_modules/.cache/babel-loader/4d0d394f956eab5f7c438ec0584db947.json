{"ast":null,"code":"import _classCallCheck from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/joga/Documents/Pooja/reddit-replica/src/containers/Main.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { MenuItem, Navbar, NavbarToggler, NavbarBrand, NavDropdown, Nav, NavItem, FormGroup, FormControl, NavLink, UncontrolledDropdown, DropdownToggle, DropdownMenu, Button, DropdownItem } from 'react-bootstrap';\nimport '../styles/Header.css';\nimport { Link } from 'react-router-dom';\nimport { Route, Redirect } from 'react-router-dom';\nimport { selectSubreddit, selectSort, fetchPostsIfNeeded, invalidateSubreddit } from '../actions/actions';\nimport Header from '../components/Header';\nimport Posts from '../containers/Posts';\n\nvar Main =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Main, _Component);\n\n  function Main(props) {\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Main).call(this, props));\n    _this.handleMenuChange = _this.handleMenuChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleRefreshClick = _this.handleRefreshClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n\n    if (window.performance) {\n      if (performance.navigation.type == 1) {\n        _this.handleRefreshClick();\n      }\n    }\n\n    _this.state = {\n      menu: '/best'\n    };\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          dispatch = _this$props.dispatch,\n          selectedSubreddit = _this$props.selectedSubreddit;\n      dispatch(fetchPostsIfNeeded(selectedSubreddit));\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var _this$props2 = this.props,\n          dispatch = _this$props2.dispatch,\n          selectedSubreddit = _this$props2.selectedSubreddit;\n      console.log('selected subreddit: ' + selectedSubreddit);\n\n      window.onpopstate = function (e) {\n        window.location.reload();\n      };\n    }\n  }, {\n    key: \"handleMenuChange\",\n    value: function handleMenuChange(subreddit, sort) {\n      var sub = subreddit.replace(/ /g, '');\n      this.props.dispatch(selectSubreddit(sub));\n      this.props.dispatch(selectSort(sort));\n      this.props.dispatch(fetchPostsIfNeeded(sub, sort));\n    }\n  }, {\n    key: \"handleRefreshClick\",\n    value: function handleRefreshClick() {\n      var _this$props3 = this.props,\n          dispatch = _this$props3.dispatch,\n          selectedSubreddit = _this$props3.selectedSubreddit;\n      dispatch(invalidateSubreddit(selectedSubreddit));\n      dispatch(fetchPostsIfNeeded(selectedSubreddit));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props4 = this.props,\n          selectedSubreddit = _this$props4.selectedSubreddit,\n          posts = _this$props4.posts,\n          isFetching = _this$props4.isFetching;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        class: \"navbarleft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Navbar.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        pullLeft: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Reddit-Replica\")), React.createElement(Navbar.Toggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })), React.createElement(Navbar.Collapse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        eventKey: 1,\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/home\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Home\")), React.createElement(NavDropdown, {\n        eventKey: 2,\n        title: \"Subreddits\",\n        id: \"basic-nav-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        eventKey: 2.1,\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/worldnews/best\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"World News\")), React.createElement(MenuItem, {\n        eventKey: 2.2,\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/politics/best\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Politics\")), React.createElement(MenuItem, {\n        eventKey: 2.3,\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/technology/best\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Technology\")), React.createElement(MenuItem, {\n        eventKey: 2.4,\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/movies/best\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Movies\")), React.createElement(MenuItem, {\n        eventKey: 2.5,\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/gaming/best\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Gaming\"))), React.createElement(NavDropdown, {\n        eventKey: 3,\n        title: \"Sort By\",\n        id: \"basic-nav-dropdown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(MenuItem, {\n        eventKey: 3.1,\n        onSelect: this.handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: this.state.menu + \"/hot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Hot\")), React.createElement(MenuItem, {\n        eventKey: 3.2,\n        onSelect: this.handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: this.state.menu + \"/new\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"New\")), React.createElement(MenuItem, {\n        eventKey: 3.3,\n        onSelect: this.handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: this.state.menu + \"/controversial\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Controversial\")))), React.createElement(Navbar.Form, {\n        pullRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: \"Search Reddit...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      })), ' ', React.createElement(Button, {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return Main;\n}(Component);\n\nfunction mapStateToProps(state) {\n  console.log(\"from mapstateprops\" + JSON.stringify(state));\n  var selectedSubreddit = state.selectedSubreddit,\n      postsBySubreddit = state.postsBySubreddit;\n\n  var _ref = postsBySubreddit[selectedSubreddit] || {\n    isFetching: true,\n    items: []\n  },\n      isFetching = _ref.isFetching,\n      posts = _ref.items;\n\n  return {\n    selectedSubreddit: selectedSubreddit,\n    posts: posts,\n    isFetching: isFetching\n  };\n}\n\nexport default connect(mapStateToProps)(Main);","map":{"version":3,"sources":["/Users/joga/Documents/Pooja/reddit-replica/src/containers/Main.js"],"names":["React","Component","connect","MenuItem","Navbar","NavbarToggler","NavbarBrand","NavDropdown","Nav","NavItem","FormGroup","FormControl","NavLink","UncontrolledDropdown","DropdownToggle","DropdownMenu","Button","DropdownItem","Link","Route","Redirect","selectSubreddit","selectSort","fetchPostsIfNeeded","invalidateSubreddit","Header","Posts","Main","props","handleMenuChange","bind","handleRefreshClick","window","performance","navigation","type","state","menu","dispatch","selectedSubreddit","console","log","onpopstate","e","location","reload","subreddit","sort","sub","replace","posts","isFetching","handleSelect","handleSort","mapStateToProps","JSON","stringify","postsBySubreddit","items"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  MenuItem,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  NavDropdown,\n  Nav,\n  NavItem,\n  FormGroup,\n  FormControl,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  Button,\n  DropdownItem } from 'react-bootstrap';\nimport '../styles/Header.css';\nimport { Link } from 'react-router-dom';\nimport { Route, Redirect } from 'react-router-dom';\nimport {\n    selectSubreddit,\n    selectSort,\n    fetchPostsIfNeeded,\n    invalidateSubreddit\n} from '../actions/actions'\n\nimport Header from '../components/Header'\nimport Posts from '../containers/Posts'\n\n\nclass Main extends Component {\n    constructor(props) {\n        super(props)\n\n        this.handleMenuChange = this.handleMenuChange.bind(this)\n        this.handleRefreshClick = this.handleRefreshClick.bind(this)\n\n        if (window.performance) {\n        if (performance.navigation.type == 1) {\n          this.handleRefreshClick();\n        }\n      }\n\n      this.state = {\n        menu: '/best',\n      }\n    }\n\n    componentDidMount() {\n        const { dispatch, selectedSubreddit } = this.props\n        dispatch(fetchPostsIfNeeded(selectedSubreddit))\n    }\n\n    componentDidUpdate(){\n      const { dispatch, selectedSubreddit } = this.props\n      console.log('selected subreddit: '+selectedSubreddit);\n      window.onpopstate  = (e) => {\n        window.location.reload();\n      }\n    }\n\n    handleMenuChange(subreddit,sort) {\n        const sub = subreddit.replace(/ /g, '')\n        this.props.dispatch(selectSubreddit(sub))\n        this.props.dispatch(selectSort(sort))\n        this.props.dispatch(fetchPostsIfNeeded(sub,sort))\n    }\n\n    handleRefreshClick() {\n        const { dispatch, selectedSubreddit } = this.props\n        dispatch(invalidateSubreddit(selectedSubreddit))\n        dispatch(fetchPostsIfNeeded(selectedSubreddit))\n    }\n\n    render() {\n        const { selectedSubreddit, posts, isFetching } = this.props\n\n        return (\n            <div>\n            <Navbar class=\"navbarleft\">\n              <Navbar.Header>\n                <Navbar.Brand pullLeft>\n                  <a href=\"/home\">Reddit-Replica</a>\n                </Navbar.Brand>\n                <Navbar.Toggle />\n              </Navbar.Header>\n              <Navbar.Collapse>\n                <Nav>\n                  <NavItem eventKey={1} onSelect={this.handleSelect}><Link to=\"/home\">Home</Link></NavItem>\n                  <NavDropdown eventKey={2} title=\"Subreddits\" id=\"basic-nav-dropdown\">\n                    <MenuItem eventKey={2.1} onSelect={this.handleSelect}><Link to=\"/worldnews/best\">World News</Link></MenuItem>\n                    <MenuItem eventKey={2.2} onSelect={this.handleSelect}><Link to=\"/politics/best\">Politics</Link></MenuItem>\n                    <MenuItem eventKey={2.3} onSelect={this.handleSelect}><Link to=\"/technology/best\">Technology</Link></MenuItem>\n                    <MenuItem eventKey={2.4} onSelect={this.handleSelect}><Link to=\"/movies/best\">Movies</Link></MenuItem>\n                    <MenuItem eventKey={2.5} onSelect={this.handleSelect}><Link to=\"/gaming/best\">Gaming</Link></MenuItem>\n                  </NavDropdown>\n                  <NavDropdown eventKey={3} title=\"Sort By\" id=\"basic-nav-dropdown\">\n                    <MenuItem eventKey={3.1} onSelect={this.handleSort}><Link to={this.state.menu+\"/hot\"}>Hot</Link></MenuItem>\n                    <MenuItem eventKey={3.2} onSelect={this.handleSort}><Link to={this.state.menu+\"/new\"}>New</Link></MenuItem>\n                    <MenuItem eventKey={3.3} onSelect={this.handleSort}><Link to={this.state.menu+\"/controversial\"}>Controversial</Link></MenuItem>\n                  </NavDropdown>\n                </Nav>\n                <Navbar.Form pullRight>\n                  <FormGroup>\n                    <FormControl type=\"text\" placeholder=\"Search Reddit...\" />\n                  </FormGroup>{' '}\n                  <Button type=\"submit\">Submit</Button>\n                </Navbar.Form>\n              </Navbar.Collapse>\n\n            </Navbar>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state) {\n  console.log(\"from mapstateprops\"+ JSON.stringify(state));\n    const { selectedSubreddit, postsBySubreddit } = state\n    const { isFetching, items: posts } = postsBySubreddit[selectedSubreddit] || { isFetching: true, items: [] }\n\n    return {\n        selectedSubreddit,\n        posts,\n        isFetching\n    }\n}\n\nexport default connect(mapStateToProps)(Main)\n"]},"metadata":{},"sourceType":"module"}