{"ast":null,"code":"import _classCallCheck from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/joga/Documents/Pooja/reddit-replica/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/joga/Documents/Pooja/reddit-replica/src/components/PostModal.js\";\nimport { Modal } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\nimport '../styles/PostModal.css';\n\nvar PostModal =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostModal, _React$Component);\n\n  function PostModal() {\n    _classCallCheck(this, PostModal);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PostModal).apply(this, arguments));\n  }\n\n  _createClass(PostModal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          url = _this$props.url,\n          title = _this$props.title,\n          author = _this$props.author,\n          selftext = _this$props.selftext,\n          subreddit = _this$props.subreddit,\n          thumbnail = _this$props.thumbnail;\n      var notImage = ['self', 'default'];\n      return React.createElement(Modal, Object.assign({}, this.props, {\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }), React.createElement(Modal.Header, {\n        closeButton: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(Modal.Title, {\n        id: \"contained-modal-title-vcenter\",\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"Posted by \", author, \" in \", subreddit)), !notImage.includes(thumbnail) && React.createElement(Image, {\n        floated: \"right\",\n        src: thumbnail,\n        rounded: true,\n        bordered: true,\n        size: \"tiny\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(Modal.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, title), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, url)), React.createElement(Modal.Footer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.props.onHide,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \"Close\")));\n    }\n  }]);\n\n  return PostModal;\n}(React.Component);\n\nexport { PostModal as default };","map":{"version":3,"sources":["/Users/joga/Documents/Pooja/reddit-replica/src/components/PostModal.js"],"names":["Modal","Button","React","Card","Image","PostModal","props","url","title","author","selftext","subreddit","thumbnail","notImage","includes","onHide","Component"],"mappings":";;;;;;AAAA,SAASA,KAAT,QAAsB,iBAAtB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,QAA4B,mBAA5B;AACA,OAAO,yBAAP;;IAGqBC,S;;;;;;;;;;;;;6BACV;AAAA,wBACwD,KAAKC,KAD7D;AAAA,UACCC,GADD,eACCA,GADD;AAAA,UACMC,KADN,eACMA,KADN;AAAA,UACaC,MADb,eACaA,MADb;AAAA,UACqBC,QADrB,eACqBA,QADrB;AAAA,UAC+BC,SAD/B,eAC+BA,SAD/B;AAAA,UAC0CC,SAD1C,eAC0CA,SAD1C;AAEP,UAAMC,QAAQ,GAAG,CAAE,MAAF,EAAU,SAAV,CAAjB;AACA,aACE,oBAAC,KAAD,oBACM,KAAKP,KADX;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,2BAAgB,+BAHlB;AAIE,QAAA,QAAQ,MAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAME,oBAAC,KAAD,CAAO,MAAP;AAAc,QAAA,WAAW,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,KAAD,CAAO,KAAP;AAAa,QAAA,EAAE,EAAC,+BAAhB;AAAgD,QAAA,SAAS,EAAC,cAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACaG,MADb,UACyBE,SADzB,CADF,CANF,EAWI,CAACE,QAAQ,CAACC,QAAT,CAAkBF,SAAlB,CAAD,IAAiC,oBAAC,KAAD;AAAO,QAAA,OAAO,EAAC,OAAf;AAAuB,QAAA,GAAG,EAAEA,SAA5B;AAAuC,QAAA,OAAO,MAA9C;AAA+C,QAAA,QAAQ,MAAvD;AAAwD,QAAA,IAAI,EAAC,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAXrC,EAYE,oBAAC,KAAD,CAAO,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKJ,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGD,GADH,CAFF,CAZF,EAkBE,oBAAC,KAAD,CAAO,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWS,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CAlBF,CADF;AAwBD;;;;EA5BoCb,KAAK,CAACc,S;;SAAxBX,S","sourcesContent":["import { Modal } from 'react-bootstrap';\nimport { Button } from 'react-bootstrap';\nimport React from 'react';\nimport { Card, Image } from 'semantic-ui-react'\nimport '../styles/PostModal.css';\n\n\nexport default class PostModal extends React.Component {\n  render() {\n    const { url, title, author, selftext, subreddit, thumbnail } = this.props\n    const notImage = [ 'self', 'default' ]\n    return (\n      <Modal\n        {...this.props}\n        size=\"lg\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton>\n          <Modal.Title id=\"contained-modal-title-vcenter\" className=\"modal-header\">\n            Posted by {author} in {subreddit}\n          </Modal.Title>\n        </Modal.Header>\n        { !notImage.includes(thumbnail) && <Image floated='right' src={thumbnail} rounded bordered size=\"tiny\" />}\n        <Modal.Body>\n          <h4>{title}</h4>\n          <p>\n            {url}\n          </p>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button onClick={this.props.onHide}>Close</Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}